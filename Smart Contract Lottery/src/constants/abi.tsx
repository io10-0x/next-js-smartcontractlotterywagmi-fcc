const abi = [
  {
    type: "constructor",
    stateMutability: "undefined",
    payable: false,
    inputs: [
      { type: "uint256", name: "entrancefee" },
      { type: "address", name: "linktokenaddress" },
      { type: "address", name: "v2WrapperAddress" },
    ],
  },
  { type: "error", name: "Raffle__LotteryNotOpen", inputs: [] },
  { type: "error", name: "Raffle__NotEnoughETH", inputs: [] },
  { type: "error", name: "Raffle__TransferFailed", inputs: [] },
  { type: "error", name: "Raffle__UpkeepNotNeeded", inputs: [] },
  {
    type: "event",
    anonymous: false,
    name: "Lotteryenter",
    inputs: [{ type: "address", name: "playeraddress", indexed: true }],
  },
  {
    type: "event",
    anonymous: false,
    name: "OwnershipTransferRequested",
    inputs: [
      { type: "address", name: "from", indexed: true },
      { type: "address", name: "to", indexed: true },
    ],
  },
  {
    type: "event",
    anonymous: false,
    name: "OwnershipTransferred",
    inputs: [
      { type: "address", name: "from", indexed: true },
      { type: "address", name: "to", indexed: true },
    ],
  },
  {
    type: "event",
    anonymous: false,
    name: "RequestFulfilled",
    inputs: [
      { type: "uint256", name: "requestId", indexed: false },
      { type: "uint256[]", name: "randomWords" },
      { type: "uint256", name: "payment", indexed: false },
    ],
  },
  {
    type: "event",
    anonymous: false,
    name: "RequestSent",
    inputs: [
      { type: "uint256", name: "requestId", indexed: false },
      { type: "uint32", name: "numWords", indexed: false },
    ],
  },
  {
    type: "event",
    anonymous: false,
    name: "WinnerPicked",
    inputs: [{ type: "address", name: "winner", indexed: true }],
  },
  {
    type: "function",
    name: "acceptOwnership",
    constant: false,
    payable: false,
    inputs: [],
    outputs: [],
  },
  {
    type: "function",
    name: "checkUpkeep",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [{ type: "bytes", name: "checkData" }],
    outputs: [
      { type: "bool", name: "upkeepNeeded" },
      { type: "bytes", name: "" },
    ],
  },
  {
    type: "function",
    name: "enterlottery",
    constant: false,
    stateMutability: "payable",
    payable: true,
    inputs: [],
    outputs: [],
  },
  {
    type: "function",
    name: "getNumWords",
    constant: true,
    stateMutability: "pure",
    payable: false,
    inputs: [],
    outputs: [{ type: "uint256", name: "numwords" }],
  },
  {
    type: "function",
    name: "getcallbackgaslimit",
    constant: true,
    stateMutability: "pure",
    payable: false,
    inputs: [],
    outputs: [{ type: "uint256", name: "gaslimit" }],
  },
  {
    type: "function",
    name: "getentrancefee",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [],
    outputs: [{ type: "uint256", name: "" }],
  },
  {
    type: "function",
    name: "getinterval",
    constant: true,
    stateMutability: "pure",
    payable: false,
    inputs: [],
    outputs: [{ type: "uint256", name: "interval" }],
  },
  {
    type: "function",
    name: "getlatestblocktimestamp",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [],
    outputs: [{ type: "uint256", name: "" }],
  },
  {
    type: "function",
    name: "getlotterystate",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [],
    outputs: [{ type: "uint8", name: "" }],
  },
  {
    type: "function",
    name: "getnumplayers",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [],
    outputs: [{ type: "uint256", name: "" }],
  },
  {
    type: "function",
    name: "getwinner",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [],
    outputs: [{ type: "address", name: "" }],
  },
  {
    type: "function",
    name: "lastRequestId",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [],
    outputs: [{ type: "uint256", name: "" }],
  },
  {
    type: "function",
    name: "owner",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [],
    outputs: [{ type: "address", name: "" }],
  },
  {
    type: "function",
    name: "performUpkeep",
    constant: false,
    payable: false,
    inputs: [{ type: "bytes", name: "performData" }],
    outputs: [],
  },
  {
    type: "function",
    name: "rawFulfillRandomWords",
    constant: false,
    payable: false,
    inputs: [
      { type: "uint256", name: "_requestId" },
      { type: "uint256[]", name: "_randomWords" },
    ],
    outputs: [],
  },
  {
    type: "function",
    name: "requestIds",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [{ type: "uint256", name: "" }],
    outputs: [{ type: "uint256", name: "" }],
  },
  {
    type: "function",
    name: "s_requests",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [{ type: "uint256", name: "" }],
    outputs: [
      { type: "uint256", name: "paid" },
      { type: "bool", name: "fulfilled" },
    ],
  },
  {
    type: "function",
    name: "transferOwnership",
    constant: false,
    payable: false,
    inputs: [{ type: "address", name: "to" }],
    outputs: [],
  },
];
export default abi;
